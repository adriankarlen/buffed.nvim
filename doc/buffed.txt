==============================================================================
------------------------------------------------------------------------------
                                                                             *M*
                                      `M`
Class ~
{buffed}

------------------------------------------------------------------------------
                                                                     *M.buffs()*
                                  `M.buffs`()
file names for all buffs
Return ~
`(table<string>)`

------------------------------------------------------------------------------
                                                                   *M.debuffs()*
                                 `M.debuffs`()
file names for all debuffs
Return ~
`(table<string>)`

------------------------------------------------------------------------------
                                                                     *M.setup()*
                               `M.setup`({opts})
Parameters ~
{opts} buffed.options


==============================================================================
------------------------------------------------------------------------------
                                                                     *M.options*
                                  `M.options`
Class ~
{buffed.options}
Fields ~
{file_icons} `(boolean)`
{buff} Buff
{debuff} Debuff

------------------------------------------------------------------------------
                                                            *M.extend_options()*
                           `M.extend_options`({opts})
Parameters ~
{opts} buffed.options


==============================================================================
------------------------------------------------------------------------------
                                                                    *M.severity*
                                  `M.severity`
Class ~
{buffed.severity}
Fields ~
{ERROR} `(integer)`
{WARN} `(integer)`
{INFO} `(integer)`
{HINT} `(integer)`

------------------------------------------------------------------------------
                                                                  *M.highlights*
                                 `M.highlights`
Class ~
{buffed.highlights}
Fields ~
{TabLine} `(string)`
{TabLineFill} `(string)`
{TabLineSel} `(string)`
{BuffedBuff} `(string)`
{BuffedDebuff} `(string)`
{BuffedMiniIconsAzure} `(string)`
{BuffedMiniIconsBlue} `(string)`
{BuffedMiniIconsCyan} `(string)`
{BuffedMiniIconsGreen} `(string)`
{BuffedMiniIconsGrey} `(string)`
{BuffedMiniIconsOrange} `(string)`
{BuffedMiniIconsPurple} `(string)`
{BuffedMiniIconsRed} `(string)`
{BuffedMiniIconsYellow} `(string)`


==============================================================================
------------------------------------------------------------------------------
                                                                   *get_color()*
                          `get_color`({group}, {attr})
Parameters ~
{group} `(string)`
{attr} `(string)`
Return ~
`(string)`

------------------------------------------------------------------------------
                                                             *set_icon_colors()*
                            `set_icon_colors`({bg})
Parameters ~
{bg} `(string)`

------------------------------------------------------------------------------
                                                          *M.create_hl_groups()*
                             `M.create_hl_groups`()
custom highlight groups
Return ~
`(nil)`


==============================================================================
------------------------------------------------------------------------------
                                                               *named_buffers()*
                           `named_buffers`({buffers})
a table of buffer file names by their ids
Parameters ~
{buffers} `(table<number>)`
Return ~
`(table<string>)`

------------------------------------------------------------------------------
                                                                       *buffs()*
                                   `buffs`()
table of buffer id's that is modified
Return ~
`(table<number>)`

------------------------------------------------------------------------------
                                                                     *debuffs()*
                                  `debuffs`()
table of buffer id's that are open and has diagnostic of configured level
Return ~
`(table<number>)`

------------------------------------------------------------------------------
                                                                     *M.named()*
                               `M.named`({type})
buffer names for either debuffs or buffs
Parameters ~
{type} "buff" | "debuff"
Return ~
`(table<string>)`


==============================================================================
------------------------------------------------------------------------------
                                                                    *get_icon()*
                             `get_icon`({filename})
icon string and hl group
Parameters ~
{filename} `(string)`
Return ~
`(string)` `(optional)`
Return ~
`(string)` `(optional)`

------------------------------------------------------------------------------
                                                                   *get_title()*
                             `get_title`({bufname})
buffer title
Parameters ~
{bufname} `(string)`
Return ~
`(string)`

------------------------------------------------------------------------------
                                                                      *M.show()*
                                   `M.show`()
the tabline
Return ~
`(string)`


==============================================================================
------------------------------------------------------------------------------
                                                                 *H._basename()*
                               `H._basename`({s})
basename for a filepath
Parameters ~
{s} `(string)`
Return ~
`(string)`

------------------------------------------------------------------------------
                                                             *H._cwd_filename()*
                             `H._cwd_filename`({s})
filepath with cwd as root for a filepath
Parameters ~
{s} `(string)`
Return ~
`(string)`

------------------------------------------------------------------------------
                                                                 *H._colorize()*
                            `H._colorize`({s}, {hl})
hl to a string
Parameters ~
{s} `(string)`
{hl} `(string)`
Return ~
`(string)`

------------------------------------------------------------------------------
                                                                   *H._spacer()*
                                `H._spacer`({n})
spacing with hl
Parameters ~
{n} `(number)`
Return ~
`(string)`

------------------------------------------------------------------------------
                                                                    *H._align()*
                                  `H._align`()
alignment string
Return ~
`(string)`

------------------------------------------------------------------------------
                                                                 *H._truncate()*
                                `H._truncate`()
end
Return ~
`(string)`


 vim:tw=78:ts=8:noet:ft=help:norl: